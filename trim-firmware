#!/bin/bash -eu
#
# Remove unnecessary firmware files
#

function list_firmware()
{
	local modules_dir=${1}
	local module modinfo

	# List module firmware files
	while IFS= read -r module ; do
		/sbin/modinfo "${module}" | sed -n 's/^firmware:\s*//p'
	done < <(find "${modules_dir}" -name '*.ko')

	# List built-in module firmware files
	while IFS= read -r modinfo ; do
		tr '\0' '\n' < "${modinfo}" | sed -n 's/^.*\.firmware=//p'
	done < <(find "${modules_dir}" -name modules.builtin.modinfo)
}

DESTDIR=${1}

# Copy required firmware files to a new directory
while IFS= read -r fw_file ; do

	# Most iwlwifi firwmare files are versioned, and lower
	# versions are often required, when max version is not shipped
	# by linux-firmware package
	case $fw_file in iwlwifi-*.ucode)
		if ! [ -e "${DESTDIR}"/firmware/${fw_file} ]; then
			max_api=$(echo $fw_file | sed -n 's/iwlwifi-.*-\([0-9]*\).ucode/\1/p')
			for api in `seq $max_api -1 39`; do
				api_fw_file=${fw_file/%$max_api.ucode/$api.ucode}
				if [ -e "${DESTDIR}"/firmware/$api_fw_file ]; then
					echo Overriding $fw_file with $api_fw_file
					fw_file=$api_fw_file
					break;
				fi
			done
		fi
		;;
	esac

	for src_file in "${DESTDIR}"/firmware/${fw_file} ; do
		if ! [ -e "${src_file}" ] ; then
			continue  # Skip non-existing source files
		fi

		src_dir=${src_file%/*}
		dst_dir=${DESTDIR}/firmware.new/${src_dir#${DESTDIR}/firmware}

		mkdir -p "${dst_dir}"
		# Note: We dereference symlinks which might result in duplicate
		# binaries but that's much easier than following the symlinks
		cp "${src_file}" "${dst_dir}"
	done
done < <(list_firmware "${DESTDIR}"/modules | sort -u)

# Copy all brcm files, since there might be config files that the kernel
# doesn't expose via modinfo
if [ -d "${DESTDIR}"/firmware.new/brcm ] ; then
	cp "${DESTDIR}"/firmware/brcm/* "${DESTDIR}"/firmware.new/brcm
fi

# Copy all AthrBT files, since there might be config files that the kernel
# doesn't expose via modinfo
if [ -d "${DESTDIR}"/firmware/ar3k ] ; then
	cp -a "${DESTDIR}"/firmware/ar3k "${DESTDIR}"/firmware.new/
fi

# Copy the wifi regulatory database
if [ -e "${DESTDIR}"/firmware/regulatory.db ] ; then
	cp "${DESTDIR}"/firmware/regulatory.* "${DESTDIR}"/firmware.new
fi

# Move kernel firmware files to the new firmware directory
for d in "${DESTDIR}"/modules/* ; do
	if [ -d "${DESTDIR}"/firmware/"${d##*/}" ] ; then
		mv "${DESTDIR}"/firmware/"${d##*/}" "${DESTDIR}"/firmware.new
	fi
done

# If an intel bluetooth firmware is included, include the rest of them
# LP: #1970819
if [ -e "${DESTDIR}"/firmware.new/intel/ibt-12-16.sfi ]; then
    cp "${DESTDIR}"/firmware/intel/ibt-*.sfi "${DESTDIR}"/firmware.new/intel/
    cp "${DESTDIR}"/firmware/intel/ibt-*.ddc "${DESTDIR}"/firmware.new/intel/
fi

# If a mediatek bluetooth firmware is included, include lots of
# undeclared BT firmware files for btusb and btqca
# LP: #1997910
if [ -e "${DESTDIR}"/firmware.new/mediatek/mt7668pr2h.bin ]; then
    if [ -e "${DESTDIR}"/firmware/qca ]; then
        mkdir -p "${DESTDIR}"/firmware.new/qca
        cp "${DESTDIR}"/firmware/qca/* "${DESTDIR}"/firmware.new/qca/
    fi
fi

# Undeclared Intel SOF firmware
if [ -d "${DESTDIR}"/modules/*/kernel/sound/soc/sof/intel/ ] && \
       [ -d "${DESTDIR}"/firmware/intel/sof ] && \
       [ -d "${DESTDIR}"/firmware/intel/sof-tplg ]; then
    cp -r "${DESTDIR}"/firmware/intel/sof "${DESTDIR}"/firmware.new/intel/
    cp -r "${DESTDIR}"/firmware/intel/sof-tplg "${DESTDIR}"/firmware.new/intel/
fi

# Undeclared PNVM fallback settings LP: #1999396
for ucode in "${DESTDIR}"/firmware/iwlwifi-*.ucode; do
	if [ -e $ucode ]; then
		pnvm_file=$(basename $ucode | sed -n 's/\(iwlwifi-.*\)-[0-9]*.ucode/\1.pnvm/p')
		if [ -e "${DESTDIR}"/firmware/$pnvm_file ]; then
			cp "${DESTDIR}"/firmware/$pnvm_file "${DESTDIR}"/firmware.new/$pnvm_file
		fi
	fi
done

# Switch to the new firmware directory
rm -rf "${DESTDIR}"/firmware
mv "${DESTDIR}"/firmware.new "${DESTDIR}"/firmware
